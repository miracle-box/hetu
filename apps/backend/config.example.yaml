app:
  listenTo: '3000'
  baseUrl: 'https://api.example.org'
  session:
    # 1 day TTL for sessions
    ttlMs: 86400000
    # Cannot be renewed after 7 days
    inactiveAfterMs: 604800000
    # At most 30 days lifespan
    maxLifespanMs: 2592000000
  yggdrasil:
    serverName: 'Hetu'
    links:
      homepage: 'https://example.org'
      register: 'https://example.org/register'
    skinDomains:
      - 'example.org'
      - '.example.org'
    profileKeypair:
      private: |
        -----BEGIN PRIVATE KEY-----
        <Your private key here>
        -----END PRIVATE KEY-----
      public: |
        -----BEGIN PUBLIC KEY-----
        <Your public key here>
        -----END PUBLIC KEY-----
  mcClaimVerification:
    clientId: 'your-client-id'
    clientSecret: 'your-client-secret'

  oauth2:
    providers:
      microsoft:
        protocol: 'oauth2'
        clientId: 'your-client-id'
        clientSecret: 'your-client-secret'
        pkce: 'S256'
        endpoints:
          authorization: 'https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize'
          token: 'https://login.microsoftonline.com/consumers/oauth2/v2.0/token'
          userinfo: 'https://graph.microsoft.com/oidc/userinfo'
        profileScopes: ['openid', 'email', 'profile']
        profileMap:
          id: '/sub'
          email: '/email'
          username: '/email'
          avatarUrl: false
          nickname: false

debug:
  enableServerTiming: true

database:
  url: 'postgres://user:password@localhost:5432/database_name'
  migrationUrl: 'postgres://user:password@localhost:5432/database_name'

storage:
  s3:
    endpoint: 'https://s3-endpoint.example.org'
    publicRoot: 'https://storage.example.org'
    bucket: 'my-bucket'
    forcePathStyle: false
    # Ends in '/' if provided
    prefix: 'textures/'
    accessKey:
      id: 'access_key_id'
      secret: 'secret_access_key'

mailing:
  smtp:
    host: 'smtp.example.org'
    port: 587
    secure: true
    user: 'user@example.org'
    password: 'smtp_password'
    sender: 'Accounts <noreply@example.org>'

logging:
  level: info
  logDatabaseQueries: false
  logRequests: false
  logRequestDetails: false
  transports:
    prettyPrint:
      enabled: true
      destination: STDOUT
    file:
      enabled: true
      destination: logs/latest.log
      append: true
